//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// 
//  Author: Johnny Vu
// </auto-generated>
//------------------------------------------------------------------------------

namespace VL.Business.Services.Mapper
{
    using System;
    using System.Collections.Generic;
    using System.Text;
    using System.Linq;
    using VL.Business.Entities;
    using VL.Data.Model;
    
    /// <summary>
    /// DTO Mapper for <see cref="EmpRef"/> and <see cref="EmpRefEntity"/>.
    /// </summary>
    static public partial class EmpRefMapper
    {
        /// <summary>
        /// Invoked when <see cref="ToDTO"/> operation is about to return.
        /// </summary>
        /// <param name="dto"><see cref="EmpRefEntity"/> converted from <see cref="EmpRef"/>.</param>
        static partial void OnDTO(this EmpRef entity, EmpRefEntity dto);
       
        /// <summary>
        /// Invoked when <see cref="ToEntity"/> operation is about to return.
        /// </summary>
        /// <param name="entity"><see cref="EmpRef"/> converted from <see cref="EmpRefEntity"/>.</param>
        static partial void OnEntity(this EmpRefEntity dto, EmpRef entity);
    
    
        /// <summary>
        /// Converts this instance of <see cref="EmpRefEntity"/> to an instance of <see cref="EmpRef"/>.
        /// </summary>
        /// <param name="dto"><see cref="EmpRefEntity"/> to convert.</param>
        public static EmpRef ToEntity(this EmpRefEntity dto)
        {
            if (dto == null) return null;
    
            var entity = new EmpRef();
                 
            entity.EmpID = dto.EmpID;     
            entity.FullName = dto.FullName;     
            entity.FirstName = dto.FirstName;     
            entity.LastName = dto.LastName;     
            entity.UserID = dto.UserID;     
            entity.Division = dto.Division;     
            entity.Phone = dto.Phone;     
            entity.Pager = dto.Pager;     
            entity.CellPhone = dto.CellPhone;     
            entity.EMail = dto.EMail;     
            entity.Active = dto.Active;     
            entity.Guard = dto.Guard;        
            dto.OnEntity(entity);
    
            return entity;
        }
    
        /// <summary>
        /// Converts this instance of <see cref="EmpRef"/> to an instance of <see cref="EmpRefEntity"/>.
        /// </summary>
        /// <param name="entity"><see cref="EmpRef"/> to convert.</param>
        public static EmpRefEntity ToDTO(this EmpRef entity)
        {
            if (entity == null) return null;
    
            var dto = new EmpRefEntity();
                 
            dto.EmpID = entity.EmpID;     
            dto.FullName = entity.FullName;     
            dto.FirstName = entity.FirstName;     
            dto.LastName = entity.LastName;     
            dto.UserID = entity.UserID;     
            dto.Division = entity.Division;     
            dto.Phone = entity.Phone;     
            dto.Pager = entity.Pager;     
            dto.CellPhone = entity.CellPhone;     
            dto.EMail = entity.EMail;     
            dto.Active = entity.Active;     
            dto.Guard = entity.Guard;
            entity.OnDTO(dto);
    
            return dto;
        }
    
        /// <summary>
        /// Converts each instance of <see cref="EmpRefEntity"/> to an instance of <see cref="EmpRef"/>.
        /// </summary>
        /// <param name="dtos"></param>
        /// <returns></returns>
        public static List<EmpRef> ToEntities(this IEnumerable<EmpRefEntity> dtos)
        {
            if (dtos == null) return null;
    
            return dtos.Select(e => e.ToEntity()).ToList();
        }
    
        /// <summary>
        /// Converts each instance of <see cref="EmpRef"/> to an instance of <see cref="EmpRefEntity"/>.
        /// </summary>
        /// <param name="entities"></param>
        /// <returns></returns>
        public static List<EmpRefEntity> ToDTOs(this IEnumerable<EmpRef> entities)
        {
            if (entities == null) return null;
    
            return entities.Select(e => e.ToDTO()).ToList();
        }
    
    }
}
