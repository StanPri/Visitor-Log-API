//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// 
//  Author: Johnny Vu
// </auto-generated>
//------------------------------------------------------------------------------

namespace VL.Business.Services.Mapper
{
    using System;
    using System.Collections.Generic;
    using System.Text;
    using System.Linq;
    using VL.Business.Entities;
    using VL.Data.Model;
    
    /// <summary>
    /// DTO Mapper for <see cref="Room"/> and <see cref="RoomEntity"/>.
    /// </summary>
    static public partial class RoomMapper
    {
        /// <summary>
        /// Invoked when <see cref="ToDTO"/> operation is about to return.
        /// </summary>
        /// <param name="dto"><see cref="RoomEntity"/> converted from <see cref="Room"/>.</param>
        static partial void OnDTO(this Room entity, RoomEntity dto);
       
        /// <summary>
        /// Invoked when <see cref="ToEntity"/> operation is about to return.
        /// </summary>
        /// <param name="entity"><see cref="Room"/> converted from <see cref="RoomEntity"/>.</param>
        static partial void OnEntity(this RoomEntity dto, Room entity);
    
    
        /// <summary>
        /// Converts this instance of <see cref="RoomEntity"/> to an instance of <see cref="Room"/>.
        /// </summary>
        /// <param name="dto"><see cref="RoomEntity"/> to convert.</param>
        public static Room ToEntity(this RoomEntity dto)
        {
            if (dto == null) return null;
    
            var entity = new Room();
                 
            entity.RoomID = dto.RoomID;     
            entity.CampusID = dto.CampusID;     
            entity.Room1 = dto.Room1;     
            entity.Active = dto.Active;        
            dto.OnEntity(entity);
    
            return entity;
        }
    
        /// <summary>
        /// Converts this instance of <see cref="Room"/> to an instance of <see cref="RoomEntity"/>.
        /// </summary>
        /// <param name="entity"><see cref="Room"/> to convert.</param>
        public static RoomEntity ToDTO(this Room entity)
        {
            if (entity == null) return null;
    
            var dto = new RoomEntity();
                 
            dto.RoomID = entity.RoomID;     
            dto.CampusID = entity.CampusID;     
            dto.Room1 = entity.Room1;     
            dto.Active = entity.Active;
            entity.OnDTO(dto);
    
            return dto;
        }
    
        /// <summary>
        /// Converts each instance of <see cref="RoomEntity"/> to an instance of <see cref="Room"/>.
        /// </summary>
        /// <param name="dtos"></param>
        /// <returns></returns>
        public static List<Room> ToEntities(this IEnumerable<RoomEntity> dtos)
        {
            if (dtos == null) return null;
    
            return dtos.Select(e => e.ToEntity()).ToList();
        }
    
        /// <summary>
        /// Converts each instance of <see cref="Room"/> to an instance of <see cref="RoomEntity"/>.
        /// </summary>
        /// <param name="entities"></param>
        /// <returns></returns>
        public static List<RoomEntity> ToDTOs(this IEnumerable<Room> entities)
        {
            if (entities == null) return null;
    
            return entities.Select(e => e.ToDTO()).ToList();
        }
    
    }
}
