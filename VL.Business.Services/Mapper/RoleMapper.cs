//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// 
//  Author: Johnny Vu
// </auto-generated>
//------------------------------------------------------------------------------

namespace VL.Business.Services.Mapper
{
    using System;
    using System.Collections.Generic;
    using System.Text;
    using System.Linq;
    using VL.Business.Entities;
    using VL.Data.Model;
    
    /// <summary>
    /// DTO Mapper for <see cref="Role"/> and <see cref="RoleEntity"/>.
    /// </summary>
    static public partial class RoleMapper
    {
        /// <summary>
        /// Invoked when <see cref="ToDTO"/> operation is about to return.
        /// </summary>
        /// <param name="dto"><see cref="RoleEntity"/> converted from <see cref="Role"/>.</param>
        static partial void OnDTO(this Role entity, RoleEntity dto);
       
        /// <summary>
        /// Invoked when <see cref="ToEntity"/> operation is about to return.
        /// </summary>
        /// <param name="entity"><see cref="Role"/> converted from <see cref="RoleEntity"/>.</param>
        static partial void OnEntity(this RoleEntity dto, Role entity);
    
    
        /// <summary>
        /// Converts this instance of <see cref="RoleEntity"/> to an instance of <see cref="Role"/>.
        /// </summary>
        /// <param name="dto"><see cref="RoleEntity"/> to convert.</param>
        public static Role ToEntity(this RoleEntity dto)
        {
            if (dto == null) return null;
    
            var entity = new Role();
                 
            entity.RoleId = dto.RoleId;     
            entity.RoleName = dto.RoleName;        
            dto.OnEntity(entity);
    
            return entity;
        }
    
        /// <summary>
        /// Converts this instance of <see cref="Role"/> to an instance of <see cref="RoleEntity"/>.
        /// </summary>
        /// <param name="entity"><see cref="Role"/> to convert.</param>
        public static RoleEntity ToDTO(this Role entity)
        {
            if (entity == null) return null;
    
            var dto = new RoleEntity();
                 
            dto.RoleId = entity.RoleId;     
            dto.RoleName = entity.RoleName;
            entity.OnDTO(dto);
    
            return dto;
        }
    
        /// <summary>
        /// Converts each instance of <see cref="RoleEntity"/> to an instance of <see cref="Role"/>.
        /// </summary>
        /// <param name="dtos"></param>
        /// <returns></returns>
        public static List<Role> ToEntities(this IEnumerable<RoleEntity> dtos)
        {
            if (dtos == null) return null;
    
            return dtos.Select(e => e.ToEntity()).ToList();
        }
    
        /// <summary>
        /// Converts each instance of <see cref="Role"/> to an instance of <see cref="RoleEntity"/>.
        /// </summary>
        /// <param name="entities"></param>
        /// <returns></returns>
        public static List<RoleEntity> ToDTOs(this IEnumerable<Role> entities)
        {
            if (entities == null) return null;
    
            return entities.Select(e => e.ToDTO()).ToList();
        }
    
    }
}
